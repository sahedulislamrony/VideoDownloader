name: Build Installers

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: '1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Install WiX Toolset
      run: |
        Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311.exe" -OutFile "wix311.exe"
        Start-Process -FilePath "wix311.exe" -ArgumentList "/quiet" -Wait
    
    - name: Install NSIS
      run: |
        choco install nsis -y
    
    - name: Build Windows Installers
      run: |
        $version = if ($env:GITHUB_REF -match 'refs/tags/v(.*)') { $matches[1] } else { "${{ github.event.inputs.version || '1.0.0' }}" }
        cd installers/scripts
        powershell -ExecutionPolicy Bypass -File build-windows.ps1 -Version $version
    
    - name: Upload Windows Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-installers
        path: dist/*
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y rpm build-essential devscripts debhelper
        # Install AppImageTool
        wget -O /tmp/appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x /tmp/appimagetool
        sudo mv /tmp/appimagetool /usr/local/bin/
    
    - name: Build Linux Packages
      run: |
        version=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//' || echo "${{ github.event.inputs.version || '1.0.0' }}")
        cd installers/linux
        chmod +x *.sh
        ./build-deb.sh $version
        ./build-rpm.sh $version
        ./build-appimage.sh $version
    
    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-packages
        path: dist/*
        retention-days: 30

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Install Dependencies
      run: |
        brew install create-dmg
    
    - name: Build macOS Package
      run: |
        version=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//' || echo "${{ github.event.inputs.version || '1.0.0' }}")
        cd installers/macos
        chmod +x build-pkg.sh
        ./build-pkg.sh $version ${{ matrix.arch }}
    
    - name: Upload macOS Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-${{ matrix.arch }}-packages
        path: dist/*
        retention-days: 30

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
